{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-4\"\n};\nconst _hoisted_4 = {\n  class: \"well\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_center = _resolveComponent(\"center\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"My Shipments\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.userShipments, item => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_center, null, {\n      default: _withCtx(() => [_createElementVNode(\"p\", null, _toDisplayString(item), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)]);\n  }), 256 /* UNKEYED_FRAGMENT */))])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_renderList","$data","userShipments","item","_hoisted_4","_createVNode","_component_center","default","_withCtx","_toDisplayString","_"],"sources":["/Applications/MAMP/htdocs/laravel/arsil-11/frontend/src/components/myShipments.vue"],"sourcesContent":["<template>\n    <h1>My Shipments</h1>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <div class=\"well\" v-for=\"item in userShipments\" >\n                    <center>\n                        <p>{{ item }}</p>\n                    </center>\n                </div>    \n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from '@/axios';\n\nexport default {\n    mounted() {\n        this.listShipments();\n    },\n    data() {\n        console.log(\"START 1\");\n        console.log(\"END 1\");\n        return {\n            userID: \"\",\n            userShipments: {}\n        }\n    },\n    methods: {\n        async listShipments() {\n            console.log(\"START 2\");\n            const user = await axios.get(\"http://localhost:8000/api/user\", {\n                headers: {\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            });\n            this.userID = user.data.id;\n            const payload = { ID_USER: this.userID };\n            const headers = { 'Authorization': `Bearer ${localStorage.getItem('token')}` };\n            this.userShipments = await axios.post(\"/shipments-by-user\", payload, { headers });\n            this.userShipments = this.userShipments.data;\n            console.log(this.userID, this.userShipments.data);\n            console.log(\"END 2\");\n        }\n    //     validateInput() {\n    //         const errors = {};\n    //         if(!this.senderCode) errors.senderCode = 'The Sender Zip Code is required!';\n    //         if(!this.receiverCode) errors.receiverCode = 'The Receiver Zip Code is required!';\n    //         if(!this.weight) errors.weight = 'The Weight is required!';\n    //         if(!this.length) errors.length = 'The Length is required!';\n    //         if(!this.width) errors.width = 'The Width is required!';\n    //         if(!this.height) errors.height = 'The Height is required!';\n    //         return errors;\n    //     },\n    //     async addShipment() {\n    //         const errors = this.validateInput();\n    //         const currentDate = new Date().setDate(new Date().getMinutes());\n    //         var userID = null;\n    //         if(Object.keys(errors).length > 0) {\n    //             this.errors = errors;\n    //             return;\n    //         }\n    //         try {\n    //             if(localStorage.getItem('token')) {\n    //                 if(currentDate > localStorage.getItem('tokenExpireAt')) {\n    //                     localStorage.removeItem('token');\n    //                     localStorage.removeItem('tokenExpireAt');\n    //                     this.$router.push('/login');\n    //                 }\n    //                 else {\n    //                     const user = await axios.get(\"http://localhost:8000/api/user\", {\n    //                         headers: {\n    //                             'Authorization': `Bearer ${localStorage.getItem('token')}`\n    //                         }\n    //                     });\n    //                     userID = user.data.id;\n    //                     console.log(\"userID\", userID);\n    //                 }\n    //             }\n    //             const response = await axios.post(\"/insert-shipment\", {\n    //                 SENDER_CODE: this.senderCode,\n    //                 RECEIVER_CODE: this.receiverCode,\n    //                 DETAILS: JSON.stringify({\n    //                     weight: this.weight,\n    //                     length: this.length,\n    //                     width: this.width,\n    //                     height: this.height,\n    //                     volume: (this.length * this.width * this.height) / 5000\n    //                 }),\n    //                 ID_USER: userID\n    //             });\n    //             if(userID) {\n    //                 const payload = { ID_USER: userID };\n    //                 const headers = { 'Authorization': `Bearer ${localStorage.getItem('token')}` };\n    //                 const userShipments = await axios.post(\"/shipments-by-user\", payload, { headers });\n    //                 console.log(userShipments);\n    //                 this.$router.push({name: 'myShipments', params: { userShipments: userShipments, userID: userID }});\n                    \n    //             }\n    //             else \n    //                 this.$router.push('/');\n    //         }\n    //         catch(error) {\n    //             console.error(\"An error occurred during the insert shipment: \", error);\n    //         }\n    //     }\n    }\n}\n</script>"],"mappings":";;EAESA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAK;;EACPA,KAAK,EAAC;AAAU;;EACZA,KAAK,EAAC;AAAM;;;uBALjCC,mBAAA,CAAAC,SAAA,S,0BACIC,mBAAA,CAAqB,YAAjB,cAAY,sBAChBA,mBAAA,CAUM,OAVNC,UAUM,GATFD,mBAAA,CAQM,OARNE,UAQM,GAPFF,mBAAA,CAMM,OANNG,UAMM,I,kBALFL,mBAAA,CAIMC,SAAA,QATtBK,WAAA,CAKiDC,KAAA,CAAAC,aAAa,EAArBC,IAAI;yBAA7BT,mBAAA,CAIM,OAJNU,UAIM,GAHFC,YAAA,CAESC,iBAAA;MAR7BC,OAAA,EAAAC,QAAA,CAOwB,MAAiB,CAAjBZ,mBAAA,CAAiB,WAAAa,gBAAA,CAAXN,IAAI,iB;MAPlCO,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}