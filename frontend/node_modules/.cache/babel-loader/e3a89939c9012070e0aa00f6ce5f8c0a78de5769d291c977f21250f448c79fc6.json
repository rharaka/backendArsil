{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"Checkout\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createTextVNode(_toDisplayString(this.$route.params.userID) + \" \", 1 /* TEXT */), _cache[0] || (_cache[0] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _cache[1] || (_cache[1] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(this.$route.params.shipment) + \" \", 1 /* TEXT */), _createCommentVNode(\" <ul class=\\\"well titles\\\">\\n                    <li>\\n                        <span class=\\\"order-number\\\">#</span>\\n                        <span class=\\\"sender-code\\\">SENDER</span>\\n                        <span class=\\\"receiver-code\\\">RECEIVER</span>\\n                        <span class=\\\"price\\\">PRICE</span>\\n                        <span class=\\\"courier\\\">COURIER</span>\\n                        <span class=\\\"created-at\\\">Created At</span>\\n                    </li>\\n                </ul> \\n                <ul class=\\\"well\\\" v-for=\\\"item in userShipments\\\">\\n                    <li>\\n                        <span class=\\\"order-number\\\">{{ item.ORDER_NUMBER }}</span>\\n                        <span class=\\\"sender-code\\\">{{ item.SENDER_CODE }}</span>\\n                        <span class=\\\"receiver-code\\\">{{ item.RECEIVER_CODE }}</span>\\n                        <span class=\\\"price\\\">{{ item.PRICE }}</span>\\n                        <span class=\\\"courier\\\">{{ item.COURIER }}</span>\\n                        <span class=\\\"created-at\\\">{{ item.created_at.split(\\\"T\\\")[0] }}</span>\\n                    </li>\\n                </ul>     \")])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_createTextVNode","_toDisplayString","$route","params","userID","shipment","_createCommentVNode"],"sources":["/Applications/MAMP/htdocs/laravel/arsil-11/frontend/src/components/CheckOut.vue"],"sourcesContent":["<template>\n    <h1>Checkout</h1>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                {{ this.$route.params.userID }}\n                <br><br>\n                {{ this.$route.params.shipment }}\n                <!-- <ul class=\"well titles\">\n                    <li>\n                        <span class=\"order-number\">#</span>\n                        <span class=\"sender-code\">SENDER</span>\n                        <span class=\"receiver-code\">RECEIVER</span>\n                        <span class=\"price\">PRICE</span>\n                        <span class=\"courier\">COURIER</span>\n                        <span class=\"created-at\">Created At</span>\n                    </li>\n                </ul> \n                <ul class=\"well\" v-for=\"item in userShipments\">\n                    <li>\n                        <span class=\"order-number\">{{ item.ORDER_NUMBER }}</span>\n                        <span class=\"sender-code\">{{ item.SENDER_CODE }}</span>\n                        <span class=\"receiver-code\">{{ item.RECEIVER_CODE }}</span>\n                        <span class=\"price\">{{ item.PRICE }}</span>\n                        <span class=\"courier\">{{ item.COURIER }}</span>\n                        <span class=\"created-at\">{{ item.created_at.split(\"T\")[0] }}</span>\n                    </li>\n                </ul>     -->\n            </div>\n        </div>\n    </div>\n</template>\n\n<style>\n    .well {\n        display: flex;\n        flex-direction: column;\n        flex-wrap: nowrap;\n        justify-content: center;\n        align-items: center;\n        margin: 5px;\n        padding: 2px;\n    }\n    .well li {\n        display: flex;\n        flex-direction: row;\n        flex-wrap: nowrap;\n        justify-content: space-around;\n        align-items: center;\n        gap: 10px;\n        flex: 0 0 95%;\n        max-width: 95%;\n        width: 95%;\n        margin-bottom: 5px;\n    }\n    .well li span {\n        width: 15%;\n        flex: 0 0 15%;\n        border: 1px solid #333333;\n        min-height: 21px;\n        font-size: 15px;\n    }\n    .titles li span {\n        font-weight: 700;\n        border-bottom: 1px solid #333333;\n        border-top: 1px solid transparent;\n        border-left: 1px solid transparent;\n        border-right: 1px solid transparent;\n    }\n</style>\n\n<script>\nimport axios from '@/axios';\n\nexport default {\n    mounted() {\n        // this.listShipments();\n    },\n    data() {\n        return {\n            userID: \"\",\n            shipmentToPay: {}\n        }\n    },\n    methods: {\n        // async listShipments() {\n        //     const user = await axios.get(\"http://localhost:8000/api/user\", {\n        //         headers: {\n        //             'Authorization': `Bearer ${localStorage.getItem('token')}`\n        //         }\n        //     });\n        //     this.userID = user.data.id;\n        //     const payload = { ID_USER: this.userID };\n        //     const headers = { 'Authorization': `Bearer ${localStorage.getItem('token')}` };\n        //     this.userShipments = await axios.post(\"/shipments-by-user\", payload, { headers });\n        //     this.userShipments = this.userShipments.data;\n        //     console.log(this.userID, this.userShipments);\n        // }\n    //     validateInput() {\n    //         const errors = {};\n    //         if(!this.senderCode) errors.senderCode = 'The Sender Zip Code is required!';\n    //         if(!this.receiverCode) errors.receiverCode = 'The Receiver Zip Code is required!';\n    //         if(!this.weight) errors.weight = 'The Weight is required!';\n    //         if(!this.length) errors.length = 'The Length is required!';\n    //         if(!this.width) errors.width = 'The Width is required!';\n    //         if(!this.height) errors.height = 'The Height is required!';\n    //         return errors;\n    //     },\n    //     async addShipment() {\n    //         const errors = this.validateInput();\n    //         const currentDate = new Date().setDate(new Date().getMinutes());\n    //         var userID = null;\n    //         if(Object.keys(errors).length > 0) {\n    //             this.errors = errors;\n    //             return;\n    //         }\n    //         try {\n    //             if(localStorage.getItem('token')) {\n    //                 if(currentDate > localStorage.getItem('tokenExpireAt')) {\n    //                     localStorage.removeItem('token');\n    //                     localStorage.removeItem('tokenExpireAt');\n    //                     this.$router.push('/login');\n    //                 }\n    //                 else {\n    //                     const user = await axios.get(\"http://localhost:8000/api/user\", {\n    //                         headers: {\n    //                             'Authorization': `Bearer ${localStorage.getItem('token')}`\n    //                         }\n    //                     });\n    //                     userID = user.data.id;\n    //                     console.log(\"userID\", userID);\n    //                 }\n    //             }\n    //             const response = await axios.post(\"/insert-shipment\", {\n    //                 SENDER_CODE: this.senderCode,\n    //                 RECEIVER_CODE: this.receiverCode,\n    //                 DETAILS: JSON.stringify({\n    //                     weight: this.weight,\n    //                     length: this.length,\n    //                     width: this.width,\n    //                     height: this.height,\n    //                     volume: (this.length * this.width * this.height) / 5000\n    //                 }),\n    //                 ID_USER: userID\n    //             });\n    //             if(userID) {\n    //                 const payload = { ID_USER: userID };\n    //                 const headers = { 'Authorization': `Bearer ${localStorage.getItem('token')}` };\n    //                 const userShipments = await axios.post(\"/shipments-by-user\", payload, { headers });\n    //                 console.log(userShipments);\n    //                 this.$router.push({name: 'myShipments', params: { userShipments: userShipments, userID: userID }});\n                    \n    //             }\n    //             else \n    //                 this.$router.push('/');\n    //         }\n    //         catch(error) {\n    //             console.error(\"An error occurred during the insert shipment: \", error);\n    //         }\n    //     }\n    }\n}\n</script>"],"mappings":";;EAESA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAK;;EACPA,KAAK,EAAC;AAAU;;uBAJjCC,mBAAA,CAAAC,SAAA,S,0BACIC,mBAAA,CAAiB,YAAb,UAAQ,sBACZA,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BFD,mBAAA,CA0BM,OA1BNE,UA0BM,GAzBFF,mBAAA,CAwBM,OAxBNG,UAwBM,GA5BlBC,gBAAA,CAAAC,gBAAA,MAKwBC,MAAM,CAACC,MAAM,CAACC,MAAM,IAAG,GAC/B,iB,0BAAAR,mBAAA,CAAI,sC,0BAAAA,mBAAA,CAAI,sCANxBI,gBAAA,CAMwB,GACR,GAAAC,gBAAA,MAAQC,MAAM,CAACC,MAAM,CAACE,QAAQ,IAAG,GACjC,iBAAAC,mBAAA,+nCAmBa,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}