{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h1\", null, \"My Shipments \" + _toDisplayString(_ctx.$route.params.userID), 1 /* TEXT */), _createCommentVNode(\" <div class=\\\"form-container\\\">\\n        <form @submit.prevent=\\\"addShipment\\\" class=\\\"add-shipment-form\\\">\\n            <input class=\\\"input-field\\\" type=\\\"text\\\" v-model=\\\"senderCode\\\" placeholder=\\\"Sender Zip Code\\\" required />\\n            <p v-if=\\\"errors.senderCode\\\" class=\\\"errors\\\">{{ errors.senderCode }}</p>\\n            <input class=\\\"input-field\\\" type=\\\"text\\\" v-model=\\\"receiverCode\\\" placeholder=\\\"Receiver Zip Code\\\" required />\\n            <p v-if=\\\"errors.receiverCode\\\" class=\\\"errors\\\">{{ errors.receiverCode }}</p>\\n            <input class=\\\"input-field\\\" type=\\\"number\\\" v-model=\\\"weight\\\" placeholder=\\\"Weight in kg\\\" required />\\n            <p v-if=\\\"errors.weight\\\" class=\\\"errors\\\">{{ errors.weight }}</p>\\n            <input class=\\\"input-field\\\" type=\\\"number\\\" v-model=\\\"length\\\" placeholder=\\\"Length in cm\\\" required />\\n            <p v-if=\\\"errors.length\\\" class=\\\"errors\\\">{{ errors.length }}</p>\\n            <input class=\\\"input-field\\\" type=\\\"number\\\" v-model=\\\"width\\\" placeholder=\\\"Width in cm\\\" required />\\n            <p v-if=\\\"errors.width\\\" class=\\\"errors\\\">{{ errors.width }}</p>\\n            <input class=\\\"input-field\\\" type=\\\"number\\\" v-model=\\\"height\\\" placeholder=\\\"Height in cm\\\" required />\\n            <p v-if=\\\"errors.height\\\" class=\\\"errors\\\">{{ errors.height }}</p>\\n            <button type=\\\"submit\\\">Ship</button>\\n        </form>\\n    </div> \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","_toDisplayString","_ctx","$route","params","userID","_createCommentVNode"],"sources":["/Applications/MAMP/htdocs/laravel/arsil-11/frontend/src/components/myShipments.vue"],"sourcesContent":["<template>\n    <h1>My Shipments {{ $route.params.userID }}</h1>\n    <!-- <div class=\"form-container\">\n        <form @submit.prevent=\"addShipment\" class=\"add-shipment-form\">\n            <input class=\"input-field\" type=\"text\" v-model=\"senderCode\" placeholder=\"Sender Zip Code\" required />\n            <p v-if=\"errors.senderCode\" class=\"errors\">{{ errors.senderCode }}</p>\n            <input class=\"input-field\" type=\"text\" v-model=\"receiverCode\" placeholder=\"Receiver Zip Code\" required />\n            <p v-if=\"errors.receiverCode\" class=\"errors\">{{ errors.receiverCode }}</p>\n            <input class=\"input-field\" type=\"number\" v-model=\"weight\" placeholder=\"Weight in kg\" required />\n            <p v-if=\"errors.weight\" class=\"errors\">{{ errors.weight }}</p>\n            <input class=\"input-field\" type=\"number\" v-model=\"length\" placeholder=\"Length in cm\" required />\n            <p v-if=\"errors.length\" class=\"errors\">{{ errors.length }}</p>\n            <input class=\"input-field\" type=\"number\" v-model=\"width\" placeholder=\"Width in cm\" required />\n            <p v-if=\"errors.width\" class=\"errors\">{{ errors.width }}</p>\n            <input class=\"input-field\" type=\"number\" v-model=\"height\" placeholder=\"Height in cm\" required />\n            <p v-if=\"errors.height\" class=\"errors\">{{ errors.height }}</p>\n            <button type=\"submit\">Ship</button>\n        </form>\n    </div> -->\n</template>\n\n<script>\nimport axios from '@/axios';\n\nexport default {\n    data() {\n        return {\n            userID: null, \n            userShipments: null\n        }\n    },\n    methods: {\n        async function() {\n            console.log(\"START\");\n            this.userID = $route.params.userID;\n            const payload = { ID_USER: this.userID };\n            const headers = { 'Authorization': `Bearer ${localStorage.getItem('token')}` };\n            const userShipments = await axios.post(\"/shipments-by-user\", payload, { headers });\n            console.log(userID, userShipments);\n            console.log(\"END\");\n        }\n    //     validateInput() {\n    //         const errors = {};\n    //         if(!this.senderCode) errors.senderCode = 'The Sender Zip Code is required!';\n    //         if(!this.receiverCode) errors.receiverCode = 'The Receiver Zip Code is required!';\n    //         if(!this.weight) errors.weight = 'The Weight is required!';\n    //         if(!this.length) errors.length = 'The Length is required!';\n    //         if(!this.width) errors.width = 'The Width is required!';\n    //         if(!this.height) errors.height = 'The Height is required!';\n    //         return errors;\n    //     },\n    //     async addShipment() {\n    //         const errors = this.validateInput();\n    //         const currentDate = new Date().setDate(new Date().getMinutes());\n    //         var userID = null;\n    //         if(Object.keys(errors).length > 0) {\n    //             this.errors = errors;\n    //             return;\n    //         }\n    //         try {\n    //             if(localStorage.getItem('token')) {\n    //                 if(currentDate > localStorage.getItem('tokenExpireAt')) {\n    //                     localStorage.removeItem('token');\n    //                     localStorage.removeItem('tokenExpireAt');\n    //                     this.$router.push('/login');\n    //                 }\n    //                 else {\n    //                     const user = await axios.get(\"http://localhost:8000/api/user\", {\n    //                         headers: {\n    //                             'Authorization': `Bearer ${localStorage.getItem('token')}`\n    //                         }\n    //                     });\n    //                     userID = user.data.id;\n    //                     console.log(\"userID\", userID);\n    //                 }\n    //             }\n    //             const response = await axios.post(\"/insert-shipment\", {\n    //                 SENDER_CODE: this.senderCode,\n    //                 RECEIVER_CODE: this.receiverCode,\n    //                 DETAILS: JSON.stringify({\n    //                     weight: this.weight,\n    //                     length: this.length,\n    //                     width: this.width,\n    //                     height: this.height,\n    //                     volume: (this.length * this.width * this.height) / 5000\n    //                 }),\n    //                 ID_USER: userID\n    //             });\n    //             if(userID) {\n    //                 const payload = { ID_USER: userID };\n    //                 const headers = { 'Authorization': `Bearer ${localStorage.getItem('token')}` };\n    //                 const userShipments = await axios.post(\"/shipments-by-user\", payload, { headers });\n    //                 console.log(userShipments);\n    //                 this.$router.push({name: 'myShipments', params: { userShipments: userShipments, userID: userID }});\n                    \n    //             }\n    //             else \n    //                 this.$router.push('/');\n    //         }\n    //         catch(error) {\n    //             console.error(\"An error occurred during the insert shipment: \", error);\n    //         }\n    //     }\n    }\n}\n</script>"],"mappings":";;uBAAAA,mBAAA,CAAAC,SAAA,SACIC,mBAAA,CAAgD,YAA5C,eAAa,GAAAC,gBAAA,CAAGC,IAAA,CAAAC,MAAM,CAACC,MAAM,CAACC,MAAM,kBACxCC,mBAAA,k4CAgBU,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}