{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '@/axios';\nexport default {\n  data() {\n    return {\n      orderNumber: \"\",\n      senderCode: \"\",\n      receiverCode: \"\",\n      weight: \"\",\n      length: \"\",\n      width: \"\",\n      height: \"\",\n      minPrice: 0,\n      minPriceText: \"\",\n      courierSelected: false,\n      listCouries: [],\n      courier: \"\",\n      price: 0,\n      errors: {}\n    };\n  },\n  methods: {\n    validateInput() {\n      const errors = {};\n      if (!this.senderCode) errors.senderCode = 'The Sender Zip Code is required!';\n      if (!this.receiverCode) errors.receiverCode = 'The Receiver Zip Code is required!';\n      if (!this.weight) errors.weight = 'The Weight is required!';\n      if (!this.length) errors.length = 'The Length is required!';\n      if (!this.width) errors.width = 'The Width is required!';\n      if (!this.height) errors.height = 'The Height is required!';\n      return errors;\n    },\n    async getMinPrice() {\n      if (this.minPrice == 0) {\n        const response = await axios.post(\"/get-prices\", {\n          WEIGHT: this.weight\n        });\n        console.log(response.data);\n        this.listCouries = response.data;\n        this.minPriceText = ' From $ ' + response.data[0].PRICE;\n        this.minPrice = response.data[0].PRICE;\n      } else {\n        if (this.minPrice > 0 && this.courierSelected) {\n          // this.addShipment();\n          console.log(\"go to addShipment\");\n        } else if (this.minPrice > 0) {\n          this.courierSelected = true;\n          // this.listCouriers();\n          console.log(\"go to listCouriers\");\n        }\n      }\n    },\n    async addShipment() {\n      const errors = this.validateInput();\n      const currentDate = new Date().setDate(new Date().getMinutes());\n      var userID = null;\n      if (Object.keys(errors).length > 0) {\n        this.errors = errors;\n        return;\n      }\n      try {\n        if (localStorage.getItem('token')) {\n          if (currentDate > localStorage.getItem('tokenExpireAt')) {\n            localStorage.removeItem('token');\n            localStorage.removeItem('tokenExpireAt');\n            this.$router.push('/login');\n          } else {\n            const user = await axios.get(\"http://localhost:8000/api/user\", {\n              headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n              }\n            });\n            userID = user.data.id;\n            // console.log(\"userID\", userID);\n          }\n        }\n        const response = await axios.post(\"/insert-shipment\", {\n          ORDER_NUMBER: Math.floor(Math.random() * (9999999999 - 1000000000 + 1)) + 1000000000,\n          SENDER_CODE: this.senderCode,\n          RECEIVER_CODE: this.receiverCode,\n          DETAILS: JSON.stringify({\n            weight: this.weight,\n            length: this.length,\n            width: this.width,\n            height: this.height,\n            volume: this.length * this.width * this.height / 5000\n          }),\n          PRICE: this.price,\n          COURIER: this.courier,\n          ID_USER: userID\n        });\n        if (userID) {\n          // const payload = { ID_USER: userID };\n          // const headers = { 'Authorization': `Bearer ${localStorage.getItem('token')}` };\n          // const userShipments = await axios.post(\"/shipments-by-user\", payload, { headers });\n          // console.log(userShipments);\n          this.$router.push({\n            name: 'myShipments',\n            params: {\n              userID: userID\n            }\n          });\n        } else this.$router.push('/');\n      } catch (error) {\n        console.error(\"An error occurred during the insert shipment: \", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","orderNumber","senderCode","receiverCode","weight","length","width","height","minPrice","minPriceText","courierSelected","listCouries","courier","price","errors","methods","validateInput","getMinPrice","response","post","WEIGHT","console","log","PRICE","addShipment","currentDate","Date","setDate","getMinutes","userID","Object","keys","localStorage","getItem","removeItem","$router","push","user","get","headers","id","ORDER_NUMBER","Math","floor","random","SENDER_CODE","RECEIVER_CODE","DETAILS","JSON","stringify","volume","COURIER","ID_USER","name","params","error"],"sources":["/Applications/MAMP/htdocs/laravel/arsil-11/frontend/src/components/AddShipment.vue"],"sourcesContent":["<template>\n    <h1>Add Shipment</h1>\n    <div v-if=\"!courierSelected\">\n        <div class=\"form-container\">\n            <form @submit.prevent=\"getMinPrice\" class=\"add-shipment-form\">\n                <input class=\"input-field\" type=\"text\" v-model=\"senderCode\" placeholder=\"Sender Zip Code\" required />\n                <p v-if=\"errors.senderCode\" class=\"errors\">{{ errors.senderCode }}</p>\n                <input class=\"input-field\" type=\"text\" v-model=\"receiverCode\" placeholder=\"Receiver Zip Code\" required />\n                <p v-if=\"errors.receiverCode\" class=\"errors\">{{ errors.receiverCode }}</p>\n                <input class=\"input-field\" type=\"number\" v-model=\"weight\" placeholder=\"Weight in kg\" required />\n                <p v-if=\"errors.weight\" class=\"errors\">{{ errors.weight }}</p>\n                <input class=\"input-field\" type=\"number\" v-model=\"length\" placeholder=\"Length in cm\" required />\n                <p v-if=\"errors.length\" class=\"errors\">{{ errors.length }}</p>\n                <input class=\"input-field\" type=\"number\" v-model=\"width\" placeholder=\"Width in cm\" required />\n                <p v-if=\"errors.width\" class=\"errors\">{{ errors.width }}</p>\n                <input class=\"input-field\" type=\"number\" v-model=\"height\" placeholder=\"Height in cm\" required />\n                <p v-if=\"errors.height\" class=\"errors\">{{ errors.height }}</p>\n                <button type=\"submit\">Ship{{ minPriceText }}</button>\n            </form>\n        </div>\n    </div>\n    <div v-if=\"courierSelected\">\n        <h2>List Couriers</h2>\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <ul class=\"well\" v-for=\"item in listCouries\">\n                        <li>\n                            <form @submit.prevent=\"addShipment\" class=\"add-shipment-form\">\n                                <span>{{ item.COURIER }}</span>\n                                <span>$ {{ item.PRICE }}</span>\n                                <input type=\"hidden\" v-model=\"price\" value={{ item.PRICE }}>\n                                <input type=\"hidden\" v-model=\"courier\" value={{ item.COURIER }}>\n                                <button type=\"submit\">Select</button>\n                            </form>\n                        </li>\n                    </ul>    \n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from '@/axios';\n\nexport default {\n    data() {\n        return {\n            orderNumber: \"\",\n            senderCode: \"\",\n            receiverCode: \"\",\n            weight: \"\",\n            length: \"\",\n            width: \"\",\n            height: \"\",\n            minPrice: 0,\n            minPriceText: \"\",\n            courierSelected: false,\n            listCouries: [],\n            courier: \"\",\n            price: 0,\n            errors: {}\n        }\n    },\n    methods: {\n        validateInput() {\n            const errors = {};\n            if(!this.senderCode) errors.senderCode = 'The Sender Zip Code is required!';\n            if(!this.receiverCode) errors.receiverCode = 'The Receiver Zip Code is required!';\n            if(!this.weight) errors.weight = 'The Weight is required!';\n            if(!this.length) errors.length = 'The Length is required!';\n            if(!this.width) errors.width = 'The Width is required!';\n            if(!this.height) errors.height = 'The Height is required!';\n            return errors;\n        },\n        async getMinPrice() {\n            if(this.minPrice == 0) {\n                const response = await axios.post(\"/get-prices\", {\n                    WEIGHT: this.weight\n                });\n                console.log(response.data);\n                this.listCouries = response.data;\n                this.minPriceText = ' From $ '+response.data[0].PRICE;\n                this.minPrice = response.data[0].PRICE;\n            }\n            else {\n                if(this.minPrice > 0 && this.courierSelected) {\n                    // this.addShipment();\n                    console.log(\"go to addShipment\");\n                }\n                else if(this.minPrice > 0) {\n                    this.courierSelected = true;\n                    // this.listCouriers();\n                    console.log(\"go to listCouriers\");\n                }\n            }\n        },\n        async addShipment() {\n            const errors = this.validateInput();\n            const currentDate = new Date().setDate(new Date().getMinutes());\n            var userID = null;\n            if(Object.keys(errors).length > 0) {\n                this.errors = errors;\n                return;\n            }\n            try {\n                if(localStorage.getItem('token')) {\n                    if(currentDate > localStorage.getItem('tokenExpireAt')) {\n                        localStorage.removeItem('token');\n                        localStorage.removeItem('tokenExpireAt');\n                        this.$router.push('/login');\n                    }\n                    else {\n                        const user = await axios.get(\"http://localhost:8000/api/user\", {\n                            headers: {\n                                'Authorization': `Bearer ${localStorage.getItem('token')}`\n                            }\n                        });\n                        userID = user.data.id;\n                        // console.log(\"userID\", userID);\n                    }\n                }\n                const response = await axios.post(\"/insert-shipment\", {\n                    ORDER_NUMBER : Math.floor(Math.random() * (9999999999 - 1000000000 + 1) ) + 1000000000,\n                    SENDER_CODE: this.senderCode,\n                    RECEIVER_CODE: this.receiverCode,\n                    DETAILS: JSON.stringify({\n                        weight: this.weight,\n                        length: this.length,\n                        width: this.width,\n                        height: this.height,\n                        volume: (this.length * this.width * this.height) / 5000\n                    }),\n                    PRICE: this.price,\n                    COURIER: this.courier,\n                    ID_USER: userID\n                });\n                if(userID) {\n                    // const payload = { ID_USER: userID };\n                    // const headers = { 'Authorization': `Bearer ${localStorage.getItem('token')}` };\n                    // const userShipments = await axios.post(\"/shipments-by-user\", payload, { headers });\n                    // console.log(userShipments);\n                    this.$router.push({name: 'myShipments', params: { userID: userID }});\n                    \n                }\n                else \n                    this.$router.push('/');\n            }\n            catch(error) {\n                console.error(\"An error occurred during the insert shipment: \", error);\n            }\n        }\n    }\n}\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}