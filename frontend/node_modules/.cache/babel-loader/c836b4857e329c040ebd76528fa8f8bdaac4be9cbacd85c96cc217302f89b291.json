{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-4\"\n};\nconst _hoisted_4 = {\n  class: \"well\"\n};\nconst _hoisted_5 = {\n  class: \"order-number\"\n};\nconst _hoisted_6 = {\n  class: \"sender-code\"\n};\nconst _hoisted_7 = {\n  class: \"receiver-code\"\n};\nconst _hoisted_8 = {\n  class: \"price\"\n};\nconst _hoisted_9 = {\n  class: \"created-at\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"My Shipments\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[0] || (_cache[0] = _createStaticVNode(\"<ul class=\\\"well titles\\\"><li><span class=\\\"order-number\\\">#</span><span class=\\\"sender-code\\\">SENDER</span><span class=\\\"receiver-code\\\">RECEIVER</span><span class=\\\"price\\\">PRICE</span><span class=\\\"created-at\\\">Created At</span></li></ul>\", 1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.userShipments, item => {\n    return _openBlock(), _createElementBlock(\"ul\", _hoisted_4, [_createElementVNode(\"li\", null, [_createElementVNode(\"span\", _hoisted_5, _toDisplayString(item.ORDER_NUMBER), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_6, _toDisplayString(item.SENDER_CODE), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_7, _toDisplayString(item.RECEIVER_CODE), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_8, _toDisplayString(item.PRICE), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_9, _toDisplayString(item.created_at.split(\"T\")[0]), 1 /* TEXT */)])]);\n  }), 256 /* UNKEYED_FRAGMENT */))])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_createStaticVNode","_renderList","$data","userShipments","item","_hoisted_4","_hoisted_5","_toDisplayString","ORDER_NUMBER","_hoisted_6","SENDER_CODE","_hoisted_7","RECEIVER_CODE","_hoisted_8","PRICE","_hoisted_9","created_at","split"],"sources":["/Applications/MAMP/htdocs/laravel/arsil-11/frontend/src/components/myShipments.vue"],"sourcesContent":["<template>\n    <h1>My Shipments</h1>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <ul class=\"well titles\">\n                    <li>\n                        <span class=\"order-number\">#</span>\n                        <span class=\"sender-code\">SENDER</span>\n                        <span class=\"receiver-code\">RECEIVER</span>\n                        <span class=\"price\">PRICE</span>\n                        <span class=\"created-at\">Created At</span>\n                    </li>\n                </ul> \n                <ul class=\"well\" v-for=\"item in userShipments\">\n                    <li>\n                        <span class=\"order-number\">{{ item.ORDER_NUMBER }}</span>\n                        <span class=\"sender-code\">{{ item.SENDER_CODE }}</span>\n                        <span class=\"receiver-code\">{{ item.RECEIVER_CODE }}</span>\n                        <span class=\"price\">{{ item.PRICE }}</span>\n                        <span class=\"created-at\">{{ item.created_at.split(\"T\")[0] }}</span>\n                    </li>\n                </ul>    \n            </div>\n        </div>\n    </div>\n</template>\n\n<style>\n    .well {\n        display: flex;\n        flex-direction: column;\n        flex-wrap: nowrap;\n        justify-content: center;\n        align-items: center;\n        margin: 5px;\n        padding: 2px;\n    }\n    .well li {\n        display: flex;\n        flex-direction: row;\n        flex-wrap: nowrap;\n        justify-content: space-around;\n        align-items: center;\n        gap: 10px;\n        flex: 0 0 95%;\n        max-width: 95%;\n        width: 95%;\n        margin-bottom: 5px;\n    }\n    .well li span {\n        width: 19%;\n        flex: 0 0 19%;\n    }\n</style>\n\n<script>\nimport axios from '@/axios';\n\nexport default {\n    mounted() {\n        this.listShipments();\n    },\n    data() {\n        console.log(\"START 1\");\n        console.log(\"END 1\");\n        return {\n            userID: \"\",\n            userShipments: {}\n        }\n    },\n    methods: {\n        async listShipments() {\n            console.log(\"START 2\");\n            const user = await axios.get(\"http://localhost:8000/api/user\", {\n                headers: {\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            });\n            this.userID = user.data.id;\n            const payload = { ID_USER: this.userID };\n            const headers = { 'Authorization': `Bearer ${localStorage.getItem('token')}` };\n            this.userShipments = await axios.post(\"/shipments-by-user\", payload, { headers });\n            this.userShipments = this.userShipments.data;\n            console.log(this.userID, this.userShipments.data);\n            console.log(\"END 2\");\n        }\n    //     validateInput() {\n    //         const errors = {};\n    //         if(!this.senderCode) errors.senderCode = 'The Sender Zip Code is required!';\n    //         if(!this.receiverCode) errors.receiverCode = 'The Receiver Zip Code is required!';\n    //         if(!this.weight) errors.weight = 'The Weight is required!';\n    //         if(!this.length) errors.length = 'The Length is required!';\n    //         if(!this.width) errors.width = 'The Width is required!';\n    //         if(!this.height) errors.height = 'The Height is required!';\n    //         return errors;\n    //     },\n    //     async addShipment() {\n    //         const errors = this.validateInput();\n    //         const currentDate = new Date().setDate(new Date().getMinutes());\n    //         var userID = null;\n    //         if(Object.keys(errors).length > 0) {\n    //             this.errors = errors;\n    //             return;\n    //         }\n    //         try {\n    //             if(localStorage.getItem('token')) {\n    //                 if(currentDate > localStorage.getItem('tokenExpireAt')) {\n    //                     localStorage.removeItem('token');\n    //                     localStorage.removeItem('tokenExpireAt');\n    //                     this.$router.push('/login');\n    //                 }\n    //                 else {\n    //                     const user = await axios.get(\"http://localhost:8000/api/user\", {\n    //                         headers: {\n    //                             'Authorization': `Bearer ${localStorage.getItem('token')}`\n    //                         }\n    //                     });\n    //                     userID = user.data.id;\n    //                     console.log(\"userID\", userID);\n    //                 }\n    //             }\n    //             const response = await axios.post(\"/insert-shipment\", {\n    //                 SENDER_CODE: this.senderCode,\n    //                 RECEIVER_CODE: this.receiverCode,\n    //                 DETAILS: JSON.stringify({\n    //                     weight: this.weight,\n    //                     length: this.length,\n    //                     width: this.width,\n    //                     height: this.height,\n    //                     volume: (this.length * this.width * this.height) / 5000\n    //                 }),\n    //                 ID_USER: userID\n    //             });\n    //             if(userID) {\n    //                 const payload = { ID_USER: userID };\n    //                 const headers = { 'Authorization': `Bearer ${localStorage.getItem('token')}` };\n    //                 const userShipments = await axios.post(\"/shipments-by-user\", payload, { headers });\n    //                 console.log(userShipments);\n    //                 this.$router.push({name: 'myShipments', params: { userShipments: userShipments, userID: userID }});\n                    \n    //             }\n    //             else \n    //                 this.$router.push('/');\n    //         }\n    //         catch(error) {\n    //             console.error(\"An error occurred during the insert shipment: \", error);\n    //         }\n    //     }\n    }\n}\n</script>"],"mappings":";;EAESA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAK;;EACPA,KAAK,EAAC;AAAU;;EAUbA,KAAK,EAAC;AAAM;;EAEFA,KAAK,EAAC;AAAc;;EACpBA,KAAK,EAAC;AAAa;;EACnBA,KAAK,EAAC;AAAe;;EACrBA,KAAK,EAAC;AAAO;;EACbA,KAAK,EAAC;AAAY;;uBApBhDC,mBAAA,CAAAC,SAAA,S,0BACIC,mBAAA,CAAqB,YAAjB,cAAY,sBAChBA,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBFD,mBAAA,CAqBM,OArBNE,UAqBM,GApBFF,mBAAA,CAmBM,OAnBNG,UAmBM,G,0BAvBlBC,kBAAA,4P,kBAcgBN,mBAAA,CAQKC,SAAA,QAtBrBM,WAAA,CAcgDC,KAAA,CAAAC,aAAa,EAArBC,IAAI;yBAA5BV,mBAAA,CAQK,MARLW,UAQK,GAPDT,mBAAA,CAMK,aALDA,mBAAA,CAAyD,QAAzDU,UAAyD,EAAAC,gBAAA,CAA3BH,IAAI,CAACI,YAAY,kBAC/CZ,mBAAA,CAAuD,QAAvDa,UAAuD,EAAAF,gBAAA,CAA1BH,IAAI,CAACM,WAAW,kBAC7Cd,mBAAA,CAA2D,QAA3De,UAA2D,EAAAJ,gBAAA,CAA5BH,IAAI,CAACQ,aAAa,kBACjDhB,mBAAA,CAA2C,QAA3CiB,UAA2C,EAAAN,gBAAA,CAApBH,IAAI,CAACU,KAAK,kBACjClB,mBAAA,CAAmE,QAAnEmB,UAAmE,EAAAR,gBAAA,CAAvCH,IAAI,CAACY,UAAU,CAACC,KAAK,yB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}