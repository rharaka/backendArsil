{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"Login Page\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.login && $options.login(...args), [\"prevent\"])),\n    class: \"login-form\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    placeholder: \"Email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    placeholder: \"Password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Login\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","login","type","$event","$data","email","placeholder","required","password"],"sources":["/Applications/MAMP/htdocs/laravel/arsil-11/frontend/src/components/Login.vue"],"sourcesContent":["<template>\n    <h1>Login Page</h1>\n    <div class=\"form-container\">\n        <form @submit.prevent=\"login\" class=\"login-form\">\n            <input type=\"email\" v-model=\"email\" placeholder=\"Email\" required />\n            <input type=\"password\" v-model=\"password\" placeholder=\"Password\" required />\n            <button type=\"submit\">Login</button>\n        </form>\n    </div>\n</template>\n\n<script>\nimport axios from '@/axios';\nexport default {\n    data() {\n        return {\n            email: \"\",\n            password: \"\"\n        }\n    },\n    methods: {\n        async login() {\n            try {\n                const expireDate = new Date().setDate(new Date().getMinutes()+5);\n                const response = await axios.post(\"/login\", {\n                    email: this.email,\n                    password: this.password,\n                    expireDate: expireDate\n                });\n                if(response.data.token) {\n                    localStorage.setItem('token', response.data.token);\n                    localStorage.setItem('tokenExpireAt', expireDate);\n                    // const obj = { value: response.data.token, expires: expireDate.toString() };\n                    // localStorage.setItem('token', JSON.stringify(obj));\n                }\n                this.$store.commit('LOGIN');\n                this.$router.push('/');\n            }\n            catch(error) {\n                console.error(\"An error occurred during the login: \", error);\n            }\n        }\n    }\n};\n</script>"],"mappings":";;EAESA,KAAK,EAAC;AAAgB;;uBAF/BC,mBAAA,CAAAC,SAAA,S,0BACIC,mBAAA,CAAmB,YAAf,YAAU,sBACdA,mBAAA,CAMM,OANNC,UAMM,GALFD,mBAAA,CAIO;IAJAE,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHrBC,cAAA,KAAAC,IAAA,KAG+BC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;IAAER,KAAK,EAAC;sBAChCG,mBAAA,CAAmE;IAA5DQ,IAAI,EAAC,OAAO;IAJ/B,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAIyCC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAEG,WAAW,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAA3BH,KAAA,CAAAC,KAAK,E,mBAClCX,mBAAA,CAA4E;IAArEQ,IAAI,EAAC,UAAU;IALlC,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAK4CC,KAAA,CAAAI,QAAQ,GAAAL,MAAA;IAAEG,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAAjCH,KAAA,CAAAI,QAAQ,E,6BACxCd,mBAAA,CAAoC;IAA5BQ,IAAI,EAAC;EAAQ,GAAC,OAAK,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}